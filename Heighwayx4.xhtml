<!DOCTYPE html><html xmlns='http://www.w3.org/1999/xhtml'><head><style type='text/css'>
html, body { margin: 0; padding: 0; width: 100%; height: 100%; }
body { font: 12pt Courier New; }
.comment { position: absolute; bottom: 10pt; right: 10pt; border: 1px red dotted; text-align: right; width: 18%; height: 96%; }
/* .svg_frame { position: absolute; top: 4px; left: 4px; height: 660px; width: 1300px; border: 1px black dashed; } */
.svg_frame {
	width: 100%;
	height: 100%;
	/*transform: scale(16);*/
	/*position: absolute;*/
	/*top: 4px;*/
	/*left: 4px;*/
	/*transform: rotate(90deg);*/
}
</style>
<script type='text/ecmascript' src='./SVG OOP.js'></script>
</head><body id='outer'>
	
<script type="text/javascript">// <![CDATA[
var o,b,g,rb,rl;

var xi,yi,sz,hx,hy,cc;

const gf=[
	() => g.line(xi,yi, xi,		yi+=sz,	rb[cc]), // North
	() => g.line(xi,yi, xi+=sz,	yi,		rb[cc]), // Eash
	() => g.line(xi,yi, xi,		yi-=sz,	rb[cc]), // South
	() => g.line(xi,yi, xi-=sz,	yi,		rb[cc]), // West
	() => cc=((cc+1)%rl) // Change colors //  was /*g.circle(2,xi,yi,rb[ cc=((cc+1)%rl) ]);*/ }
];

function HeighwayEnds(n){ var i=0; g.circle(2,0,0,rb[ (i++)%rl ]); g.circle(2,hx,hy,rb[ (i++)%rl ]); while(--n){ hxp=hx; hyp=hy; hx+=hyp; hy-=hxp; g.circle(2,hx,hy,rb[ (i++)%rl ]); } }

function computeHeighway(n, hei){
	while(n-- > 0){
		// let gei=[4];
		let heiLength = hei.length;
		hei.push(4);
		for(let i=heiLength; i>0; i--){
			// if(hei[i] != 4) hei.unshift( (hei[i]+1)%4 );
			if(hei[i] != 4) hei.push( (hei[i]+1)%4 );
		};
		console.log(`h: ${hei.join(',')}`);
		// hei=hei.concat(gei);
	};
	hei.unshift(4);
	return hei;
}

function computeHeighway3(n,hei){
	while(n--){
		// let heiLength = hei.length;
		for(let i = hei.length - 1; i >= 0; i--) if(hei[i] != 4) hei.push( (hei[i]+1)%4 );
		hei.push(4);
		// console.log(`3h ${n}: ${hei.join(',')}`);
	}
	hei.unshift(4);
	return hei;
}

function computeHeighway2(n,hei){
	while(n--){
		var gei=[];
		let heiLength = hei.length;
		for(let i = heiLength - 1; i >= 0; i--){
			if(hei[i]==4){
				/*gei.unshift(4);*/
			}else{
				gei.push( (hei[i]+1)%4 );
			}
			// console.log(`2g ${i}: ${hei.join(',')}`);
		}
		gei.push(4);
		hei=hei.concat(gei);
		console.log(`2h ${n}: ${hei.join(',')}`);
	}
	hei.unshift(4);
	return hei;
}

function computeHeighwayOld(n,hei){
	while(n--){
		var gei=[4];
		for(var i=0; i<hei.length; i++){
			if(hei[i]==4){
				/*gei.unshift(4);*/
			}else{
				gei.unshift( (hei[i]+1)%4 );
			}
			console.log(`Og ${i}: ${gei.join(',')}`);
		}
		hei=hei.concat(gei);
		console.log(`Oh ${n}: ${hei.join(',')}`);
	}
	hei.unshift(4);
	return hei;
}

function drawHeighway(hei){
	for(let i=0; i<hei.length; i++){
		if( (hei[i]==4) && (hei[i+1]==4) ){ i++; };
		gf[hei[i]]();
	}
}

function turnHeighway(t,hei){ for(var i=0; i<hei.length; i++){ if(hei[i]!=4){ hei[i]=( (hei[i]+t)%4 ) } } }

o = document.getElementById('outer');
var vw = window.innerWidth;
var vh= window.innerHeight;

g = new SVG_Element(o,'svg_frame','-'+(vw/2)+' -'+(vh/2)+' '+(vw)+' '+(vh));
xi=0; yi=0; sz=3; hx=sz; hy=sz; cc=-1;
var hl = 18;

// let heiO = computeHeighway2(hl, [0]);
// console.log("================================================");
// let hei2 = computeHeighway2(hl, [0]);
// console.log("================================================");
let ti = Date.now();
let hei = computeHeighway3(hl, [0]);
let tf = Date.now();

// console.log(heiO);
// console.log(hei2);
// console.log(heiO.join("-") == hei2.join("-"));
// console.log(hei3);
// console.log(hei2.join("-") == hei3.join("-"));

rbs=[
	  ['gray'] // 0
	, ['black'] // 1
	, ['lightgray'] // 2
	, ['gold'] // 3
	, ['#FF0000','#878700','#00FF00','#008787','#0000FF','#870087'] // 4
	, ['red','black','orange','black'] // 5
	, ['red','orange','blue','purple'] // 6
	, ['silver', 'black', 'gray', 'lightgray'] // 7
];

 xi=0; yi=0; rb=rbs[6]; rl=rb.length; drawHeighway(hei);
 xi=0; yi=0; rb=rbs[4]; rl=rb.length; turnHeighway(1,hei); drawHeighway(hei);
 xi=0; yi=0; rb=rbs[6]; rl=rb.length; turnHeighway(1,hei); drawHeighway(hei);
 xi=0; yi=0; rb=rbs[7]; rl=rb.length; turnHeighway(1,hei); drawHeighway(hei);

let te = Date.now();
console.log(`Computed in ${tf - ti} and drawn in ${te - tf}.`);

// ]]>
</script>
</body></html>
